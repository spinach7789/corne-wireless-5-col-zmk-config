#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };

        TD_ESC: TD_ESC {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESC";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        TD_DASH: TD_DASH {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DASH";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp MINUS>;
        };

        TD_LOCK: TD_LOCK {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LOCK";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LG(L)>;
        };

        TD_CHEAT: TD_CHEAT {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CHEAT";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp GRAVE>;
        };

        TD_SHIFT: TD_SHIFT {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&sk LEFT_SHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&trans  &TD_ESC    &kp W           &kp E             &kp R        &kp T        &kp Y      &kp U          &kp I             &kp O           &TD_DASH   &trans
&trans  &kp A      &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G        &kp H      &hm LCTRL J    &hm LEFT_SHIFT K  &hm LEFT_ALT L  &TD_CHEAT  &trans
&trans  &TD_SHIFT  &kp X           &kp C             &kp V        &kp B        &kp N      &kp M          &kp COMMA         &kp DOT         &TD_LOCK   &trans
                                   &lt 3 TAB         &lt 1 LANG1  &kp SPACE    &kp ENTER  &kp BACKSPACE  &tog 2
            >;
        };

        Nav {
            bindings = <
&trans  &bt BT_SEL 3  &trans        &trans          &trans     &trans    &trans      &kp LC(Z)       &kp UP     &kp LC(Y)  &bt BT_SEL 0  &trans
&trans  &bt BT_SEL 4  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &trans    &kp END     &kp LEFT_ARROW  &kp DOWN   &kp RIGHT  &bt BT_SEL 1  &trans
&trans  &trans        &trans        &trans          &trans     &trans    &kp INSERT  &kp LC(C)       &kp LC(V)  &kp LC(X)  &bt BT_SEL 2  &trans
                                    &trans          &trans     &trans    &trans      &trans          &trans
            >;
        };

        Num {
            bindings = <
&trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL            &trans  &trans     &trans          &trans        &trans  &trans
&trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LEFT_BRACKET     &trans  &kp LCTRL  &kp LEFT_SHIFT  &kp LEFT_ALT  &trans  &trans
&trans  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET    &trans  &trans     &trans          &trans        &trans  &trans
                              &trans        &kp NUMBER_0  &trans               &trans  &trans     &to 0
            >;
        };

        Function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans   &trans
            >;
        };
    };
};
